- name: Install packages
  import_role:
    name: common_roles/install_latest
  vars:
    packages: "{{ basic_packages }}"

- name: Download Rustup install script
  get_url:
    url: https://sh.rustup.rs
    dest: /tmp/rustup_install.sh
    mode: 0755
  register: rustup_install_script

- name: Run Rustup install script
  command: /tmp/rustup_install.sh -y
  when: rustup_install_script.changed
  changed_when: true

- name: Update Rust
  command: "/homw/{{ username }}/.cargo/bin/rustup update"
  when: rustup_install_script.changed
  changed_when: true

- name: Install starship and eza
  command: "cargo install {{ item }} --locked"
  with_items:
    - starship
    - eza
  changed_when: true

- name: Check if nvim config is present
  stat:
    path: "/home/{{ username }}/dotfiles/nvim"
  register: nvim_config

- name: Check if nvim is already installed
  stat:
    path: "/usr/local/bin/nvim"
  register: nvim_install

- name: Build nvim from source
  # Only when nvim conf is present AND nvim is not installed
  when: nvim_config.stat.exists and not nvim_install.stat.exists
  block:

    - name: Install packages
      import_role:
        name: common_roles/install_latest
      vars:
        packages: "{{ nvim_deps }}"

    - name: Clone
      git:
        repo: "https://github.com/neovim/neovim"
        dest: "/home/{{ username }}/neovim"
        version: stable
        force: true

    - name: Make Clean
      make:
        chdir: "/home/{{ username }}/neovim"
        target: distclean

    - name: Make Build
      make:
        chdir: "/home/{{ username }}/neovim"
        target: all
        params:
          CMAKE_BUILD_TYPE: Release

    - name: Make Install
      become: true
      make:
        chdir: "/home/{{ username }}/neovim"
        target: install
