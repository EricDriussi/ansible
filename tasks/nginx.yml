---
- name: Install nginx
  package:
    name:
      - nginx
      - python3-certbot-nginx
      - apt-transport-https
    state: latest

- name: Delete default Nginx config
  file:
    state: absent
    path: /etc/nginx/sites-enabled/default

- name: Enable big files upload
  lineinfile:
    dest: /etc/nginx/nginx.conf
    insertafter: 'http \{'
    regexp: 'client_max_body_size.*'
    line: 'client_max_body_size 100M;'
    state: present

- name: Transfer website server files
  copy:
    src: "{{ item }}"
    dest: /etc/nginx/sites-enabled/
  with_items:
    - nginx-website
    - nginx-onion

- name: Retrieve Onion address
  command: 'cat /var/lib/tor/hidden_service/hostname'
  register: onion_address

- name: Set Onion address
  lineinfile:
    dest: "/etc/nginx/sites-enabled/nginx-onion"
    regexp: ".*server_name.*"
    line: "        server_name {{ onion_address.stdout }};"

- name: Config website server
  lineinfile:
    dest: "/etc/nginx/sites-enabled/nginx-website"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: '.*server_name .*', line: '        server_name {{ domain }} www.{{ domain }};' }
    - { regexp: '.*add_header.*', line: '    add_header Onion-Location http://{{ onion_address.stdout }}$request_uri;' }

- name: Transfer proxy server configs
  copy:
    src: nginx-proxy
    dest: "{{ item }}"
  with_items:
    - /etc/nginx/sites-enabled/nginx-nextcloud
    - /etc/nginx/sites-enabled/nginx-vaultwarden

- name: Config nextcloud proxy
  lineinfile:
    dest: "/etc/nginx/sites-enabled/nginx-nextcloud"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: '.*server_name .*', line: '        server_name cloud.{{ domain }} www.cloud.{{ domain }};' }
    - { regexp: '.*proxy_pass .*', line: '        proxy_pass          http://127.0.0.1:81;' }

- name: Config vaultwarden proxy
  lineinfile:
    dest: "/etc/nginx/sites-enabled/nginx-vaultwarden"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: '.*server_name .*', line: '        server_name vault.{{ domain }} www.vault.{{ domain }};' }
    - { regexp: '.*proxy_pass .*', line: '        proxy_pass          http://127.0.0.1:82;' }

- name: Transfer searx proxy server
  copy:
    src: nginx-searx
    dest: /etc/nginx/sites-enabled/nginx-searx

- name: Config searx proxy
  lineinfile:
    dest: "/etc/nginx/sites-enabled/nginx-searx"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  loop:
    - { regexp: '.*server_name .*', line: '        server_name searx.{{ domain }} www.searx.{{ domain }};' }

- name: Restart nginx
  service:
    name: nginx
    state: restarted

- name: Run cert script
  shell: "/usr/bin/certbot --nginx -n --agree-tos --email {{ email }} --domains {{ domain }},www.{{ domain }},cloud.{{ domain }},www.cloud.{{ domain }},vault.{{ domain }},www.vault.{{ domain }},searx.{{ domain }},www.searx.{{ domain }}"

- name: Cron - Keep certs updated
  cron:
    name: update certs
    state: present
    minute: "0"
    hour: "0"
    day: "2"
    job: "certbot --nginx renew"
